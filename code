#include <Arduino.h>


int seconds = 0;
int minutes = 0;
int hours = 0;
int days = 1;
bool timerRun = LOW;
unsigned long currentMillis;
unsigned long previousMillis = 0;
const long interval = 1000;


// DHT22
#include "DHT.h"
#define DHTPIN 22
#define DHTTYPE DHT22 // DHT 22  (AM2302), AM2321
DHT dht(DHTPIN, DHTTYPE);
unsigned long previousMillis_dht22 = 0;
const long interval_dht22 = 500;
float h;
int no_decimal_h;

float t;
int no_decimal_t;

float f;
int no_decimal_f;

float hif;
int no_decimal_hif;

float hic;
int no_decimal_hic;

// relay
int Relay1 = 31;
int Relay2 = 33;
bool Relay1_State = HIGH;
bool Relay2_State = HIGH;


// ปุ่มโหมด ไม่ได้ใช้
// #define modeBotton_pin 30
int modeBotton = 26;
int modeBottonState = 0;
int LastmodeBottonState = 0;


#include <LiquidCrystal.h>


const int pin_RS = 8;
const int pin_EN = 9;
const int pin_d4 = 4;
const int pin_d5 = 5;
const int pin_d6 = 6;
const int pin_d7 = 7;
const int pin_BL = 10;
LiquidCrystal lcd(pin_RS, pin_EN, pin_d4, pin_d5, pin_d6, pin_d7);
int lcd_key = 0;
int adc_key_in = 0;
#define btnRIGHT 0
#define btnUP 1
#define btnDOWN 2
#define btnLEFT 3
#define btnSELECT 4
#define btnNONE 5


long read_LCD_buttons()
{
    adc_key_in = analogRead(0);


    if (adc_key_in > 1500)
        return btnNONE;
    if (adc_key_in < 50)
        return btnRIGHT;
    if (adc_key_in < 195)
        return btnUP;
    if (adc_key_in < 380)
        return btnDOWN;
    if (adc_key_in < 500)
        return btnLEFT;
    if (adc_key_in < 800)
        return btnSELECT;
    return btnNONE;
}





// mode ตั้งเวลา
bool timeOn1 = LOW;
int Displaymode0 = 0;


int mode = 1;
// mode_1
bool modeOn1 = LOW;
int Displaymode1 = 0; // ลูกศร


int seconds_1setup = 0;
int minutes_1setup = 0;
int hours_1setup = 6;


int seconds_2setup = 0;
int minutes_2setup = 0;
int hours_2setup = 18;


int seconds_time_setup = 0;
int minutes_time_setup = 10;
int hours_time_setup = 0;


// mode_2
bool modeOn2 = LOW;


void setup()
{


    Serial.begin(9600);
    dht.begin();
    pinMode(Relay1, OUTPUT);
     digitalWrite(Relay1, HIGH);


    lcd.begin(16, 2);


    lcd.setCursor(1, 1);
    lcd.print("^");


    // pinMode(modeBotton_pin, INPUT);
}


void loop()
{
    // put your main code here, to run repeatedly:
    timeSystem(); // ระบบเวลา


    set_time(); // ตั้งเวลานาฬิกา


    Botton_System();
    setmode();
    dht22control();
    setauto();
}


void timeSystem()
{
    
        if (timerRun == HIGH)
        {
          currentMillis = millis();
          if (currentMillis - previousMillis >= interval)
          {
              previousMillis = currentMillis;
              
            seconds++;
            if (seconds == 60)
            {
                minutes++;
                seconds = 0;
            }
            if (minutes == 60)
            {
                hours++;
                minutes = 0;
            }
            if (hours == 24)
            {
                hours = 0;
            }
        }
    }
}




void Botton_System()
{
    modeBottonState = digitalRead(modeBotton);
    if (modeBottonState != LastmodeBottonState && modeBottonState == HIGH)
    {
        lcd.clear();
        mode = (mode + 1) % 3;
    }
    LastmodeBottonState = modeBottonState;


    if (mode == 1)
    {
       
        timeOn1 = HIGH;
        modeOn1 = LOW;
        modeOn2 = LOW;
    }
    else if (mode == 2)
    {
       
        timeOn1 = LOW;
        modeOn1 = HIGH;
        modeOn2 = LOW;
    }
    else
    {
       
        timeOn1 = LOW;
        modeOn1 = LOW;
        modeOn2 = HIGH;
    }


   
}


void set_time()
{


   


    if (timeOn1 == HIGH)
    {
        lcd_key = read_LCD_buttons();
        switch (lcd_key)
        {
        case btnRIGHT:
        {
            Displaymode0 = (Displaymode0 + 1) % 4;


            if (Displaymode0 == 0)
            {
                lcd.setCursor(1, 1);
                lcd.print("^");


                lcd.setCursor(4, 1);
                lcd.print(" ");


                lcd.setCursor(7, 1);
                lcd.print(" ");


                lcd.setCursor(15, 1);
                lcd.print(" ");
            }
            else if (Displaymode0 == 1)
            {
                lcd.setCursor(1, 1);
                lcd.print(" ");


                lcd.setCursor(4, 1);
                lcd.print("^");


                lcd.setCursor(7, 1);
                lcd.print(" ");


                lcd.setCursor(15, 1);
                lcd.print(" ");
            }
            else if (Displaymode0 == 2)
            {
                lcd.setCursor(1, 1);
                lcd.print(" ");


                lcd.setCursor(4, 1);
                lcd.print(" ");


                lcd.setCursor(7, 1);
                lcd.print("^");


                lcd.setCursor(15, 1);
                lcd.print(" ");
            }
            else
            {
                lcd.setCursor(1, 1);
                lcd.print(" ");


                lcd.setCursor(4, 1);
                lcd.print(" ");


                lcd.setCursor(7, 1);
                lcd.print(" ");


                lcd.setCursor(15, 1);
                lcd.print("^");
            }


            delay(300);
            break;
        }


        case btnLEFT:
        {
            Displaymode0--;
            if (Displaymode0 < 0)
            {
                Displaymode0 = 4;
            }


            if (Displaymode0 == 0)
            {
                lcd.setCursor(1, 1);
                lcd.print("^");


                lcd.setCursor(4, 1);
                lcd.print(" ");


                lcd.setCursor(7, 1);
                lcd.print(" ");


                lcd.setCursor(15, 1);
                lcd.print(" ");
            }
            else if (Displaymode0 == 1)
            {
                lcd.setCursor(1, 1);
                lcd.print(" ");


                lcd.setCursor(4, 1);
                lcd.print("^");


                lcd.setCursor(7, 1);
                lcd.print(" ");


                lcd.setCursor(15, 1);
                lcd.print(" ");
            }
            else if (Displaymode0 == 2)
            {
                lcd.setCursor(1, 1);
                lcd.print(" ");


                lcd.setCursor(4, 1);
                lcd.print(" ");


                lcd.setCursor(7, 1);
                lcd.print("^");


                lcd.setCursor(15, 1);
                lcd.print(" ");
            }
            else
            {
                lcd.setCursor(1, 1);
                lcd.print(" ");


                lcd.setCursor(4, 1);
                lcd.print(" ");


                lcd.setCursor(7, 1);
                lcd.print(" ");


                lcd.setCursor(15, 1);
                lcd.print("^");
            }


            delay(300);
            break;
        }


        case btnUP:
        {
            if (Displaymode0 == 0)
            {
                hours = (hours + 1) % 24;
            }


            else if (Displaymode0 == 1)
            {
                minutes = (minutes + 1) % 60;
            }


            else if (Displaymode0 == 2)
            {
                days++;
                if (days > 7)
                {
                    days = 1;
                }
            }
            else
            {
                mode++;
                if (mode > 3)
                {
                    mode = 1;
                }
            }
            delay(300);


            break;
        }


        case btnDOWN:
        {
            if (Displaymode0 == 0)
            {
                hours--;
                if (hours < 0)
                {
                    hours = 23;
                }
            }


            else if (Displaymode0 == 1)
            {
                minutes--;
                if (minutes < 0)
                {
                    minutes = 59;
                }
            }


            else if (Displaymode0 == 2)
            {
                days--;
                if (days < 1)
                {
                    days = 7;
                }
            }


            else
            {
                mode--;
                if (mode < 1)
                {
                    mode = 3;
                }
            }
            delay(300);


            break;
        }


        case btnSELECT:
        {
            timerRun = HIGH;
            delay(300);
            break;
        }
        }






                lcd.setCursor(0, 0);
                if (hours < 10)
                {
                    lcd.print("0");
                }
                lcd.print(hours);


                lcd.print(":");


                if (minutes < 10)
                {
                    lcd.print("0");
                }


                lcd.print(minutes);
                lcd.setCursor(5, 0);
                lcd.print("|");
                lcd.setCursor(11, 0);
                lcd.print("|");
                lcd.setCursor(12, 0);
                lcd.print("Mode");




        lcd.setCursor(6, 0);
        lcd.print(" ");
        if (days == 1)
        {
            lcd.print("Mon");
        }
        else if (days == 2)
        {
            lcd.print("Tue");
        }
        else if (days == 3)
        {
            lcd.print("Wen");
        }
        else if (days == 4)
        {
            lcd.print("Thu");
        }
        else if (days == 5)
        {
            lcd.print("Fri");
        }
        else if (days == 6)
        {
            lcd.print("Sat");
        }
        else
        {
            lcd.print("Sun");
        }
    }
}


void setmode()
{


    if (modeOn1 == HIGH)
    {


        lcd_key = read_LCD_buttons();
        switch (lcd_key)
        {
        case btnRIGHT:
        {
            Displaymode1 = (Displaymode1 + 1) % 8;
            delay(300);
            break;
        }


        case btnLEFT:
        {
            Displaymode1--;
            if (Displaymode1 < 0)
            {
                Displaymode1 = 7;
            }


            delay(300);
            break;
        }


        case btnUP:
        {
            if (Displaymode1 == 0)
            {
                hours_1setup = (hours_1setup + 1) % 24;
            }


            else if (Displaymode1 == 1)
            {
                minutes_1setup = (minutes_1setup + 1) % 60;
            }
            else if (Displaymode1 == 2)
            {
                hours_2setup = (hours_2setup + 1) % 24;
            }


            else if (Displaymode1 == 3)
            {
                minutes_2setup = (minutes_2setup + 1) % 60;
            }
            else if (Displaymode1 == 4)
            {
                mode = 3;
            }
            else if (Displaymode1 == 5)
            {
                hours_time_setup = (hours_time_setup + 1) % 4;
            }
            else if (Displaymode1 == 6)
            {
                minutes_time_setup = (minutes_time_setup + 1) % 60;
            }
            else if (Displaymode1 == 4)
            {
                mode = 3;
            }


            delay(300);
            break;
        }


        case btnDOWN:
        {
            if (Displaymode1 == 0)
            {
                hours_1setup--;
                if (hours_1setup < 0)
                {
                    hours_1setup = 23;
                }
            }


            else if (Displaymode1 == 1)
            {
                minutes_1setup--;
                if (minutes_1setup < 0)
                {
                    minutes_1setup = 59;
                }
            }
            else if (Displaymode1 == 2)
            {
                hours_2setup--;
                if (hours_2setup < 0)
                {
                    hours_2setup = 23;
                }
            }


            else if (Displaymode1 == 3)
            {
                minutes_2setup--;
                if (minutes_2setup < 0)
                {
                    minutes_2setup = 59;
                }
            }
            else if (Displaymode1 == 4)
            {
                mode = 3;
            }
            else if (Displaymode1 == 5)
            {
                hours_time_setup--;
                if (hours_time_setup < 0)
                {
                    hours_time_setup = 2;
                }
            }
            else if (Displaymode1 == 6)
            {
                minutes_time_setup--;
                if (minutes_time_setup < 0)
                {
                    minutes_time_setup = 59;
                }
            }
            else if (Displaymode1 == 4)
            {
                mode = 3;
            }
            delay(300);
            break;
        }


        case btnSELECT:
        {


            delay(300);
            break;
        }
        }


        if (Displaymode1 <= 4)
        {
            lcd.setCursor(0, 0);
            if (hours_1setup < 10)
            {
                lcd.print("0");
            }
            lcd.print(hours_1setup);
            lcd.print(":");


            if (minutes_1setup < 10)
            {
                lcd.print("0");
            }


            lcd.print(minutes_1setup);
            lcd.print("|");
            if (hours_2setup < 10)
            {
                lcd.print("0");
            }
            lcd.print(hours_2setup);


            lcd.print(":");


            if (minutes_2setup < 10)
            {
                lcd.print("0");
            }
            lcd.print(minutes_2setup);


            lcd.print("|");


            lcd.print("Time");
        }


        if (Displaymode1 > 4 && Displaymode1 <= 9)
        {
            lcd.setCursor(0, 0);
            if (hours_time_setup < 10)
            {
                lcd.print("0");
            }
            lcd.print(hours_time_setup);
            lcd.print(":");


            if (minutes_time_setup < 10)
            {
                lcd.print("0");
            }
            lcd.print(minutes_time_setup);
            lcd.print("       Time");
        }


        if (Displaymode1 == 0 || Displaymode1 == 5)
        {
            lcd.setCursor(1, 1);
            lcd.print("^");


            lcd.setCursor(4, 1);
            lcd.print(" ");


            lcd.setCursor(7, 1);
            lcd.print(" ");


            lcd.setCursor(10, 1);
            lcd.print(" ");


            lcd.setCursor(15, 1);
            lcd.print(" ");
        }
        else if (Displaymode1 == 1 || Displaymode1 == 6)
        {
            lcd.setCursor(1, 1);
            lcd.print(" ");


            lcd.setCursor(4, 1);
            lcd.print("^");


            lcd.setCursor(7, 1);
            lcd.print(" ");


            lcd.setCursor(10, 1);
            lcd.print(" ");


            lcd.setCursor(15, 1);
            lcd.print(" ");
        }
        else if (Displaymode1 == 2)
        {
            lcd.setCursor(1, 1);
            lcd.print(" ");


            lcd.setCursor(4, 1);
            lcd.print(" ");


            lcd.setCursor(7, 1);
            lcd.print("^");


            lcd.setCursor(10, 1);
            lcd.print(" ");


            lcd.setCursor(15, 1);
            lcd.print(" ");
        }
        else if (Displaymode1 == 3)
        {
            lcd.setCursor(1, 1);
            lcd.print(" ");


            lcd.setCursor(4, 1);
            lcd.print(" ");


            lcd.setCursor(7, 1);
            lcd.print(" ");


            lcd.setCursor(10, 1);
            lcd.print("^");


            lcd.setCursor(15, 1);
            lcd.print(" ");
        }
        else if (Displaymode1 == 4 || Displaymode1 == 7)
        {
            lcd.setCursor(1, 1);
            lcd.print(" ");


            lcd.setCursor(4, 1);
            lcd.print(" ");


            lcd.setCursor(7, 1);
            lcd.print(" ");


            lcd.setCursor(10, 1);
            lcd.print(" ");


            lcd.setCursor(15, 1);
            lcd.print("^");
        }

    if (minutes == minutes_1setup && hours == hours_1setup)
        {
          digitalWrite(Relay1, LOW);
           
        }
        else if (minutes == (minutes_1setup + minutes_time_setup) && hours == (hours_1setup + hours_time_setup))
        {
          digitalWrite(Relay1, HIGH);
            
        }

        if (minutes == minutes_2setup && hours == hours_2setup)
        {
            digitalWrite(Relay1, LOW);
        }
        else if (minutes == (minutes_2setup + minutes_time_setup) && hours == (hours_2setup + hours_time_setup))
        {
            digitalWrite(Relay1, HIGH);
        }



    }
}

void dht22control(){
        if (timerRun==HIGH){
            if (currentMillis - previousMillis_dht22 >= interval_dht22) {
                    previousMillis_dht22 = currentMillis;
                    //delay(200);
                    // Reading temperature or humidity takes about 250 milliseconds!
                    // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
                    h = dht.readHumidity();
                    // Read temperature as Celsius (the default)
                    t = dht.readTemperature();
                    // Read temperature as Fahrenheit (isFahrenheit = true)
                    f = dht.readTemperature(true);


                    // Check if any reads failed and exit early (to try again).
                    if (isnan(h)  ,isnan(t) , isnan(f)) {
                                Serial.println(F("Failed to read from DHT sensor!"));
                                return;
                            }


                    // Compute heat index in Fahrenheit (the default)
                    hif = dht.computeHeatIndex(f, h);
                    // Compute heat index in Celsius (isFahreheit = false)
                    hic = dht.computeHeatIndex(t, h, false);


                    Serial.print(F("Humidity: "));
                    Serial.print(h);
                    Serial.print(F("%  Temperature: "));
                    Serial.print(t);
                    Serial.print(F("°C "));
                    Serial.print(f);
                    Serial.print(F("°F  Heat index: "));
                    Serial.print(hic);
                    Serial.print(F("°C "));
                    Serial.print(hif);
                    Serial.println(F("°F"));

                    no_decimal_h = h;
                    no_decimal_t = t;
                    no_decimal_f = f;


                    
                 

            }
    }
}

void setauto(){
  if (mode == 3){
lcd.setCursor(0, 0); // set the cursor to the first column and first row
  lcd.print(t); // print the temperature value
  lcd.print(" C"); // print the unit for temperature
  lcd.print("     ");
            lcd.print("auto");

  lcd.setCursor(0, 1); // set the cursor to the first column and second row
  lcd.print(h); // print the humidity value
  lcd.print(" %"); // print the unit for humidity
   if (t >30)
            {
                digitalWrite(Relay1, LOW);
            }
  
     
   
  
            

}
}


